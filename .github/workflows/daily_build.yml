name: Daily HeyGen Knowledge Build

on:
  schedule:
    - cron: '0 6 * * *'   # 6:00 UTC daily
  workflow_dispatch:

permissions:
  contents: write
  issues: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else echo "No requirements.txt"; fi

      - name: Build
        env:
          FIRECRAWL_API_KEY: ${{ secrets.FIRECRAWL_API_KEY }}
          APIFY_TOKEN: ${{ secrets.APIFY_TOKEN }}
        run: |
          mkdir -p dist
          python scripts/build_heygen_knowledge.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: heygen_knowledge
          path: dist/heygen_knowledge.txt
          if-no-files-found: error
          retention-days: 7

      - name: Commit results back to repo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add dist/heygen_knowledge.txt || true
          git commit -m "chore: update heygen knowledge [skip ci]" || echo "No changes to commit"
          git push

      - name: Summarize output
        id: summary
        run: |
          LINES=$(wc -l < dist/heygen_knowledge.txt || echo 0)
          SIZE=$(du -h dist/heygen_knowledge.txt | cut -f1)
          echo "lines=$LINES" >> $GITHUB_OUTPUT
          echo "size=$SIZE" >> $GITHUB_OUTPUT

      - name: Notify via issue comment (no SMTP)
        uses: actions/github-script@v7
        env:
          RUN_NUMBER: ${{ github.run_number }}
          JOB_STATUS: ${{ job.status }}
          LINES: ${{ steps.summary.outputs.lines }}
          SIZE: ${{ steps.summary.outputs.size }}
          SHA: ${{ github.sha }}
          RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          MENTION: "@anandgohel"
        with:
          script: |
            const {owner, repo} = context.repo;
            const title = "Nightly HeyGen build status";
            // Find or create a tracking issue labeled bot:nightly
            const list = await github.paginate(github.rest.issues.listForRepo, {
              owner, repo, state: "open", labels: "bot:nightly"
            });
            let issue = list.find(i => i.title === title);
            if (!issue) {
              const res = await github.rest.issues.create({
                owner, repo,
                title,
                body: "This issue collects nightly build summaries.",
                labels: ["bot:nightly"]
              });
              issue = res.data;
            }
            const body = [
              `**Run #${process.env.RUN_NUMBER} â€” ${process.env.JOB_STATUS}**`,
              `Lines: ${process.env.LINES}`,
              `Size: ${process.env.SIZE}`,
              `Commit: ${process.env.SHA}`,
              `Logs: ${process.env.RUN_URL}`,
              "",
              `cc ${process.env.MENTION}`
            ].join("\n");
            await github.rest.issues.createComment({
              owner, repo, issue_number: issue.number, body
            });
